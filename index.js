const Web3 = require("web3");
web3 = new Web3(new Web3.providers.HttpProvider("HTTP://127.0.0.1:7545"));

// console.log(web3.currentProvider);

// web3.eth.getGasPrice().then((d) => {
//   console.log(web3.utils.fromWei(d, "Gwei"));
// });

const abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "candidateNames",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidateList",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_candidate",
        type: "bytes32",
      },
    ],
    name: "totalVotesFor",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_candidate",
        type: "bytes32",
      },
    ],
    name: "validCandidate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_candidate",
        type: "bytes32",
      },
    ],
    name: "voteForCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "votesReiceived",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

// var candidateNames = ["0x416c696365", "0x6c697369"];
// var votingContract = new web3.eth.Contract(abi);
// votingContract
//   .deploy({
//     data: "0x60806040523480156200001157600080fd5b50604051620007e0380380620007e083398181016040528101906200003791906200018d565b80600190805190602001906200004f92919062000057565b5050620002e4565b82805482825590600052602060002090810192821562000096579160200282015b828111156200009557825182559160200191906001019062000078565b5b509050620000a59190620000a9565b5090565b5b80821115620000c4576000816000905550600101620000aa565b5090565b6000620000df620000d98462000207565b620001de565b90508083825260208201905082856020860282011115620001055762000104620002aa565b5b60005b858110156200013957816200011e888262000176565b84526020840193506020830192505060018101905062000108565b5050509392505050565b600082601f8301126200015b576200015a620002a5565b5b81516200016d848260208601620000c8565b91505092915050565b6000815190506200018781620002ca565b92915050565b600060208284031215620001a657620001a5620002b4565b5b600082015167ffffffffffffffff811115620001c757620001c6620002af565b5b620001d58482850162000143565b91505092915050565b6000620001ea620001fd565b9050620001f8828262000240565b919050565b6000604051905090565b600067ffffffffffffffff82111562000225576200022462000276565b5b602082029050602081019050919050565b6000819050919050565b6200024b82620002b9565b810181811067ffffffffffffffff821117156200026d576200026c62000276565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620002d58162000236565b8114620002e157600080fd5b50565b6104ec80620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630d5b4ced1461005c5780632f265cf71461008c578063392e6678146100bc578063b13c744b146100ec578063cc9ab2671461011c575b600080fd5b610076600480360381019061007191906102a0565b610138565b604051610083919061035d565b60405180910390f35b6100a660048036038101906100a191906102a0565b610158565b6040516100b3919061035d565b60405180910390f35b6100d660048036038101906100d191906102a0565b610193565b6040516100e39190610327565b60405180910390f35b610106600480360381019061010191906102cd565b6101f6565b6040516101139190610342565b60405180910390f35b610136600480360381019061013191906102a0565b61021a565b005b60006020528060005260406000206000915054906101000a900460ff1681565b600061016382610193565b61016c57600080fd5b60008083815260200190815260200160002060009054906101000a900460ff169050919050565b600080600090505b6001805490508110156101eb5782600182815481106101bd576101bc610454565b5b906000526020600020015414156101d85760019150506101f1565b80806101e3906103dc565b91505061019b565b50600090505b919050565b6001818154811061020657600080fd5b906000526020600020016000915090505481565b61022381610193565b61022c57600080fd5b600160008083815260200190815260200160002060008282829054906101000a900460ff1661025b9190610378565b92506101000a81548160ff021916908360ff16021790555050565b60008135905061028581610488565b92915050565b60008135905061029a8161049f565b92915050565b6000602082840312156102b6576102b5610483565b5b60006102c484828501610276565b91505092915050565b6000602082840312156102e3576102e2610483565b5b60006102f18482850161028b565b91505092915050565b610303816103af565b82525050565b610312816103bb565b82525050565b610321816103cf565b82525050565b600060208201905061033c60008301846102fa565b92915050565b60006020820190506103576000830184610309565b92915050565b60006020820190506103726000830184610318565b92915050565b6000610383826103cf565b915061038e836103cf565b92508260ff038211156103a4576103a3610425565b5b828201905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b600060ff82169050919050565b60006103e7826103c5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561041a57610419610425565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b610491816103bb565b811461049c57600080fd5b50565b6104a8816103c5565b81146104b357600080fd5b5056fea264697066735822122079132d157cfaef2e91266512ad3e272fee6521a5514c1c0f0c7e0db68f5e479064736f6c63430008070033",
//     arguments: [candidateNames],
//   })
//   .send(
//     {
//       from: "0xce880402f378733971b01341def018463e33fb01",
//       gas: "4700000",
//     },
//     function (e, contract) {
//       console.log(contract);
//     }
//   );

const address = "0xCCd121007Dcf22b1C7eA73F0BECE9e5c4eDf08de";
const myContract = new web3.eth.Contract(abi, address);
// myContract.methods
//   .set("ppp")
//   .send({ from: "0xcE880402f378733971B01341def018463e33Fb01" })
//   .on("receipt", (data) => {
//     hiContract.methods.get().call((err, res) => {
//       console.log(res, "hahaha");
//     });
//   });

myContract.methods.candidateList(0).call((err, res) => {
  console.log(web3.utils.toAscii(res));
});
